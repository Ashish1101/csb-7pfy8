{"version":3,"sources":["Validation.js","App.js","index.js"],"names":["ValidationLayer","text","error","joi","object","string","pattern","length","validate","details","message","App","validation","useState","setError","success","setSuccess","pan","setPan","handleChange","e","a","target","value","className","type","onChange","style","color","onClick","Name","console","log","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8PAEqBA,E,oFACnB,SAAKC,GACH,IAOQC,EAPOC,IAAIC,OAAO,CACxBH,KAAME,IACHE,SACAC,QAAQ,iCACRC,OAAO,MAGaC,SAAS,CAAEP,KAAMA,IAAlCC,MACR,OAAIA,GACKA,EAAMO,QAAQ,GAAGC,U,mBAK5B,gB,YCda,SAASC,IACtB,IAAMC,EAAa,IAAIZ,EACvB,EAA0Ba,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACA,EAA+BD,mBAAS,IAAxC,mBAAOE,EAAP,KAAiBC,EAAjB,KACA,EAAuBH,mBAAS,IAAhC,mBAAOI,EAAP,KAAaC,EAAb,KACMC,EAAY,uCAAG,WAAOC,GAAP,SAAAC,EAAA,sDACjBH,EAAOE,EAAEE,OAAOC,OADC,2CAAH,sDAclB,OACE,sBAAKC,UAAU,MAAf,UACE,qDACA,uBAAOC,KAAK,OAAOC,SAAUP,IAClB,KAAVjB,EAAgB,mBAAGyB,MAAO,CAACC,MAAM,OAAjB,SAA0B1B,IAAc,mBAAGyB,MAAO,CAACC,MAAM,SAAjB,SAA4Bb,IACrF,wBAAQc,QAhBE,YACiB,IAAzBjB,EAAWkB,KAAKb,IACfD,EAAW,kBACXF,EAAS,IACTiB,QAAQC,IAAI,oBAEblB,EAAS,oBACTE,EAAW,IACXe,QAAQC,IAAI,qBAQd,mBACA,4ECxBN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC1B,EAAD,MAEFsB,K","file":"static/js/main.00394c49.chunk.js","sourcesContent":["import joi from \"joi\";\r\n\r\nexport default class ValidationLayer {\r\n  Name(text) {\r\n    const schema = joi.object({\r\n      text: joi\r\n        .string()\r\n        .pattern(/[^0-9a-z]{5}\\d{4}[^0-9a-z]{1}/)\r\n        .length(10)\r\n    });\r\n\r\n    const { error } = schema.validate({ text: text });\r\n    if (error) {\r\n      return error.details[0].message;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  Email() {}\r\n}\r\n","import \"./styles.css\";\nimport {useState} from 'react'\nimport ValidationLayer from './Validation'\n\nexport default function App() {\n  const validation = new ValidationLayer()\n  const [error, setError] = useState('')\n  const [success , setSuccess] = useState('')\n  const [pan , setPan] = useState('')\n  const handleChange = async (e) => {\n      setPan(e.target.value)\n  }\n  const check = () => {\n     if(validation.Name(pan) === true) {\n         setSuccess('Pan Card Valid')\n         setError('')\n         console.log('pan card Valid')\n     } else {\n        setError('Pan Card Invalid')\n        setSuccess('')\n        console.log('panCard Invalid')\n     }\n  }\n  return (\n    <div className=\"App\">\n      <h1>Pan Card Validation</h1>\n      <input type=\"text\" onChange={handleChange} />\n      {error !== '' ? (<p style={{color:'red'}}>{error}</p>): (<p style={{color:'green'}}>{success}</p>)}\n      <button onClick={check}>Check</button>\n      <h2>Start editing to see some magic happen!</h2>\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}